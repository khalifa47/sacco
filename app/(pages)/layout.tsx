import Header from "@/app/(components)/layout/Header";
import { Notification } from "@prisma/client";
import { createServerComponentSupabaseClient } from "@supabase/auth-helpers-nextjs";
import { headers, cookies } from "next/headers";

export const metadata = {
  title: "Kadhi Sacco",
  description: "Generated by create next app",
};

export const revalidate = 60;

const getNotifications = async (uid: string) => {
  let res: Response;
  let notifications: Notification[] = [];

  try {
    res = await fetch(`${process.env.BASE_URL}/api/notifications?uid=${uid}`);
    if (!res.ok) {
      const msg = await res.text();
      throw new Error(msg === "" ? res.statusText : msg);
    }

    notifications = await res.json();
  } catch (error: any) {
    console.error(error);
  }

  return notifications;
};

export default async function PageLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const supabase = createServerComponentSupabaseClient({
    headers,
    cookies,
  });

  const {
    data: { session },
  } = await supabase.auth.getSession();

  const notifications = await getNotifications(session!.user.id);

  return (
    <section>
      <Header
        user={session!.user.user_metadata}
        notifications={notifications}
      />
      {children}
    </section>
  );
}
